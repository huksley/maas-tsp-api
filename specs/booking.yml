openapi: 3.0.0
info:
  version: v1
  title: MaaS-TSP
  description: >-
    This is a API specification of REST endpoints that a Transport Service
    Provider (TSP) should implement to offer their services through the 
    [Whim application](https://whimapp.com/).
    
    It is written in machine readable 
    [OpenAPI Specification](https://github.com/OAI/OpenAPI-Specification) format, 
    so that API endpoints, validators and test clients can be generated from the
    documentation.
  termsOfService: '../terms.md'
  contact:
    name: MaaS API Team
    email: team@maas-global.fi
    url: 'https://maas-global.fi/'
  license:
    name: MIT
    url: 'https://opensource.org/licenses/MIT'
  x-logo:
      url: "../assets/whim-logo.png"
      backgroundColor: "#FFFFFF"
      altText: "Whim logo"
tags:
  - name: Booking
    description: >-
      Booking related APIs are the core of a TSP implementation.


      Correspondingly, a Booking is the main object exchanged between MaaS and a
      TSP.
    x-traitTag: false
    x-displayName: Booking API
components:
  securitySchemes:
    apiKeyHeader:
      in: header
      name: X-API-Key
      type: apiKey
      description: >-
        Authorization scheme to use with TSP API should be based on specifying `X-API-Key`
        header when Whim App makes request to the TSP API.


        Please not what due to serverless nature of our infrastructure we are unable to provide
        you with a set of IP addresses HTTP request will be originating from.


        To cope with that we propose using *optional* JSON payload signing, see here for more 
        information: https://developer.github.com/webhooks/securing/#validating-payloads-from-github
security:
  - apiKeyHeader: []
paths:
  /bookings/options:
    get:
      summary: Available transport options
      description: >-
        Returns available transport options or offers.
        Start time can be defined, but is optional. If startTime is not provided, but
        required by the third party API, a default value of "Date.now()" is
        used.
      tags:
        - Booking
      parameters:
        - name: from
          description: 'User''s location in comma separated form e.g. 60.123,27.456'
          in: query
          required: true
          schema:
            $ref: ../schemas/core/components/units-geo.json#/definitions/shortLocationString
        - name: to
          description: 'A desired destination e.g. 60.123,27.456'
          in: query
          required: false
          schema:
            $ref: ../schemas/core/components/units-geo.json#/definitions/shortLocationString
      x-code-samples:
          - lang: Shell
            label: Query for taxi
            source: >-
              curl --location --request GET 'http://localhost:3000/bookings/options? \
                customer[clientId]=whim&customer[locale]=en& \
                customer[opaqueId]=deadbeef-deadbeef& \
                customer[phone]=+35840000000& \
                distance=9734&endTime=1572347575000& \
                from=60.1769789,24.9504135& \
                fromAddress=streetName:Siltasaarenkatu|streetNumber:1|city:Helsinki|zipCode:00530|country:Suomi&fromName=Siltasaarenkatu%201%20Helsinki& \
                mode=TAXI& \
                startTime=1572347575000& \
                to=60.23044350000001,24.8990183& \
                toAddress=streetName:Ida%20Aalbergin%20tie|streetNumber:3|city:Helsinki|zipCode:00400|country:Suomi& \
                toName=Ida%20Aalbergin%20tie%203%20Helsinki' \
                  --header "x-api-key: pieY8Oezeicioyei5eisheeb7sheeLie"
      responses:
        '200':
          x-summary: Array of options
          description: >-
            Available transport methods matching the given query parameters. If
            no transport methods are available, an empty array is returned.
          content:  
            application/json:
              schema:
                $ref: ../schemas/tsp/booking-options-list/response.json
              examples:
                Taxi:
                  summary: Taxi
                  externalValue: "../examples/taxi/booking-options-response.json"
  /bookings/{tspId}:
    get:
      summary: Get booking
      description: Returns the Booking that has been created earlier
      tags:
        - Booking
      parameters:
        - name: tspId
          description: ID of the booking created earlier
          in: path
          required: true
          schema:
            $ref: ../schemas/core/booking.json#/definitions/tspId
      responses:
        '200':
          description: The bookings matching the query
          content:
            application/json:
              schema:
                $ref: ../schemas/core/booking.json
        '400':
          description: Bad request (invalid query parameters)
          content:
            application/json:
              schema:
                $ref: ../schemas/core/error.json
        '401':
          description: Authorization error (invalid API key)
          content:
            application/json:
              schema:
                $ref: ../schemas/core/error.json
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: ../schemas/core/error.json
    patch:
      summary: Update booking
      description: Update booking if it is possible
      tags:
        - Booking
      parameters:
        - name: tspId
          description: ID of the booking created earlier
          in: path
          required: true
          schema:
            $ref: ../schemas/core/booking.json#/definitions/tspId
      responses:
        '200':
          description: Updated, old booking returned
          content:
            application/json:
              schema:
                $ref: ../schemas/core/booking.json
        '204':
          description: Updated, no content returned
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: ../schemas/core/error.json
        '401':
          description: Authorization error (invalid API key)
          content:
            application/json:
              schema:
                $ref: ../schemas/core/error.json
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: ../schemas/core/error.json
    delete:
      summary: Delete booking
      description: Deletes booking if it is possible
      tags:
        - Booking
      parameters:
        - name: tspId
          description: ID of the booking created earlier
          in: path
          required: true
          schema:
            $ref: ../schemas/core/booking.json#/definitions/tspId
      responses:
        '200':
          description: Deleted, old booking returned
          content:
            application/json:
              schema:
                $ref: ../schemas/core/booking.json
        '204':
          description: Deleted, no content returned
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: ../schemas/core/error.json
        '401':
          description: Authorization error (invalid API key)
          content:
            application/json:
              schema:
                $ref: ../schemas/core/error.json
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: ../schemas/core/error.json
  /bookings:
    post:
      summary: Create booking
      description: >-
        Creates a new `Booking` for the TSP in **booked** state. The returned
        object will be a refrence that is passed back & forth throughout the
        booking life cycle.

        The Booking may be modified in the response, e.g. location being
        adjusted for a more suitable pick-up location.

        In addition, the service may contain a **meta** attribute for arbitrary
        TSP metadata that the TSP needs later, and **token** attribute depicting
        how long the current state is valid.

        ### JSON Schema documentation

        Full schema documented here: 
        https://maasglobal.github.io/maas-schemas/docs/tsp/booking-create/request.html
      tags:
        - Booking
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../schemas/tsp/booking-create/request.json
            examples: 
              taxi:
                summary: Taxi
                externalValue: ../examples/taxi/booking-create-request.json
        description: >-
          Parameters of booking to be created, optionally referencing 
          offerId returned on the `/bookings/options` call.
        required: true 
      responses:
        '200':
          x-summary: Booking
          description: >-
            Booking information
          content:
              application/json:
                schema:
                  $ref: ../schemas/tsp/booking-create/response.json
                examples:
                  Taxi:
                    summary: Taxi
                    externalValue: ../examples/taxi/booking-create-response.json